class Project < ActiveRecord::Base

  def initialize # (options)
    super
    self.url = generate_url(self.name)
  end

  # A random URL is generated by SHA2 hashing the project's name and a salt.
  # before_save :generate_url

  # :url is not a database field, so AR won't give us an accessor automatically.
  attr_accessor :url, :salt

  attr_accessible :name

  # TODO: Q: Do we need other validations?  What matters?  Length?
  validates :name, :presence => true

  has_many :success_builds, :class_name => 'Build',
                            :conditions => { :status => true }

  has_many :failed_builds, :class_name => 'Build',
                           :conditions => { :status => false }

  has_many :collaborations
  has_many :users, :through => :collaborations


  private

  def generate_url(name)
    # TODO: Q: What about updates?  E.g. URL compromised?
    self.salt = make_salt if new_record?
    self.url = encrypt(name)
  end

  def make_salt
    secure_hash("#{Time.now.utc}--#{url}")
  end

  def encrypt(string)
    secure_hash("#{salt}--#{string}")
  end

  def secure_hash(string)
    Digest::SHA2.hexdigest(string)
  end

end
